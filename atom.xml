<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-15T10:07:34.415Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jsong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人博客搭建详解</title>
    <link href="http://yoursite.com/2017/09/14/create-blog/"/>
    <id>http://yoursite.com/2017/09/14/create-blog/</id>
    <published>2017-09-14T08:31:13.000Z</published>
    <updated>2017-09-15T10:07:34.415Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍如何使用Hexo+GitHub搭建一个使用域名访问的个人博客网站。由于没有数据库访问，也无需购买服务器，成本极低，非常适合搭建个人博客网站，本人还只是菜鸟，其中的内容有什么不正确的还请指正。  </p><h2 id="技术介绍"><a href="#技术介绍" class="headerlink" title="技术介绍"></a>技术介绍</h2><p>Hexo是基于Nodo.js的一个快速，简单和强大的博客框架。Hexo会将Markdown语言（或其他语言）中撰写帖子在几秒钟内生成具有美丽主题的静态文件。</p><p>Node.js 就是运行在服务端的 JavaScript。换句话说就是可以使用Node.js搭建静态服务器，Hexo就是基于Nodo.js的博客框架。</p><p>GitHub其实就是一个面向开源及私有软件项目的托管平台，GitHub pages是GitHub为我们免费提供的服务器，GitHub pages 会托管[用户名].github.io代码库中的全部代码，并自动运行，因此GitHub就可以作为我们服务器而不需要购买额外的服务器或者云主机。</p><h2 id="搭建步骤介绍"><a href="#搭建步骤介绍" class="headerlink" title="搭建步骤介绍"></a>搭建步骤介绍</h2><pre><code>1.安装Node.js2.安装git3.安装Hexo4.搭建GitHub5.配置GitHub与Hexo关联6.提交项目到GitHub7.安装主题8.图片连接</code></pre><a id="more"></a><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p><a href="https://nodejs.org/en/download/" target="_blank" rel="external">Node.js下载</a>以windows64位操作系统为例：选择Windows Installer(.msi) 64-bit</p><p>安装教程参考菜鸟教程：<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="external">Node.js安装</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">node --version<span class="comment">#检查Nodo.js版本</span></div><div class="line">npm --v<span class="comment">#检查npm版本（Node.js中集成了npm）</span></div></pre></td></tr></table></figure><p>npm（Node Package Manager）是Node.js下的主流套件管理程序。它在Node.js v0.6.x版本后内建于Node系统。</p><p>##安装Git<br><a href="https://git-scm.com/download/win" target="_blank" rel="external">Git下载</a>以windows64位操作系统为例：选择64-bit Git for Windows Setup。<br>Git整个安装过程都是下一步、下一步直到完成安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git --version<span class="comment">#检查Git版本</span></div></pre></td></tr></table></figure><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>使用Hexo的理由：由于github pages存放的都是静态文件，无法动态为博客文本生成主题与样式，更别说文章的列表、分类、标签、翻页等动态内容，然而我们不得不手动更新文章目录和相关连接，并修改样式。极其麻烦。所以Hexo要做的就是在本地编辑好md文件（使用Markdown语法编辑的博客文档）后，通过命令的方式生成相关页面，最后再提交部署到github。</p><p>注意：Git安装完成后最好使用git bash编辑执行命令，因为cmd部分命令会出问题。</p><p>安装完成以上两个程序后，就可以使用npm安装Hexo：即新建一个文件夹,如E:\hexo,然后运行git bash程序，在git命令框中执行命令：<br>(1)新建E:\hexo 文件夹，安装hexo客户端<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> e:\hexo<span class="comment">#切进需要安装hexo的空目录</span></div><div class="line">$ npm install hexo-cli -g<span class="comment">#hexo客户端安装</span></div><div class="line">$ npm install hexo --save<span class="comment">#执行hexo安装命令</span></div><div class="line">$ hexo -v<span class="comment">#检查版本号</span></div></pre></td></tr></table></figure></p><p>(2)新建E:\hexo_file文件夹(这个文件夹将作为你存放代码的地方)，初始化项目代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> e:\hexo_file<span class="comment">#切进目录</span></div><div class="line">$ hexo init<span class="comment">#初始化文件</span></div><div class="line">$ hexo g <span class="comment">#生成网页</span></div><div class="line">$ hexo s <span class="comment">#启动服务</span></div></pre></td></tr></table></figure></p><p><img src="/2017/09/14/create-blog/image1.png" alt=""></p><blockquote><p>图为：初始化文件后生成的目录结构</p></blockquote><p><img src="/2017/09/14/create-blog/image2.png" alt=""></p><blockquote><p>图为：本地服务启动成功截图（访问博客<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>，关闭服务快捷键：Ctrl+c）</p></blockquote><p><img src="/2017/09/14/create-blog/image3.png" alt=""></p><blockquote><p>图为：成功访问博客</p></blockquote><h2 id="搭建github"><a href="#搭建github" class="headerlink" title="搭建github"></a>搭建github</h2><p>(1)创建仓库：新建一个名为你的用户名.github.io的仓库，例如：我的用户名为gh-jsong，那么我的仓库名必须是gh-jsong.github.io(原因是GitHub服务器会帮我们托管[用户名].github.io代码库中的全部代码，并自动运行 )<br><img src="/2017/09/14/create-blog/image4.png" alt=""></p><blockquote><p>图为：新建仓库</p></blockquote><p><img src="/2017/09/14/create-blog/image5.png" alt=""></p><blockquote><p>图为：配置仓库名称（必须是github用户名.github.io）</p></blockquote><p>(2)配置GitHub Pages<br><img src="/2017/09/14/create-blog/image6.png" alt=""></p><blockquote><p>图为：选择主题（github会自动生成默认的欢迎页面）</p></blockquote><p><img src="/2017/09/14/create-blog/image7.png" alt=""></p><blockquote><p>图为：绑定域名（通过绑定的域名可以访问github pages个人主页，前提得配置域名解析，若未绑定域名则可通过user.github.io访问，以我的为例：gh-jsong.github.io ）</p></blockquote><p>(3)域名解析（以阿里云购买的域名为例）<br><img src="/2017/09/14/create-blog/image8.png" alt=""></p><blockquote><p>图为：域名解析</p></blockquote><p>域名解析配置的两种方式：CNAME和A记录<br>CNAME：填写域名（我采用这种方式）<br>A记录：填写ip<br>到这里博客搭建就完成了，可以通过域名访问了（域名解析可能会花一段时间）</p><h2 id="配置GitHub与Hexo关联"><a href="#配置GitHub与Hexo关联" class="headerlink" title="配置GitHub与Hexo关联"></a>配置GitHub与Hexo关联</h2><p>目的： 用于将hexo博客框架创建生成的博客页面上传到github pages服务器<br>(1)生成秘钥（使用git bash命令框）<br>git配置（只执行一次）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"gh-jsong"</span>     <span class="comment">#github用户名</span></div><div class="line">$ git config --global user.email <span class="string">"ms_jiasong@hotmail.com"</span> <span class="comment">#（使用github注册使用的邮箱）</span></div><div class="line">$ ssh-keygen -t rsa -C<span class="string">"ms_jiasong@hotmail.com"</span><span class="comment">#生成秘钥</span></div></pre></td></tr></table></figure></p><p><img src="/2017/09/14/create-blog/image9.png" alt=""></p><blockquote><p>图为：查看秘钥所在文件夹</p></blockquote><p><img src="/2017/09/14/create-blog/image10.png" alt=""></p><blockquote><p>图为：id_rsa.pub文件就是我们需要的秘钥</p></blockquote><p>(2)GitHub配置SSH key<br>点击settings进入设置界面，左侧个人设置（Personal settings）中，点击SSH and GPG keys，在点击右上角New SSH key按钮，则弹出如下图的添加秘钥窗口：</p><p><img src="/2017/09/14/create-blog/image11.png" alt=""></p><blockquote><p>图为：github连接本地hexo所添加的秘钥</p></blockquote><p>(3)配置_config.yml中deploy部分<br>打开E:\hexo_file文件夹中的_config.yml文件修改配置</p><p><img src="/2017/09/14/create-blog/image12.png" alt=""></p><blockquote><p>图为：hexo上传项目代码所需要的配置</p></blockquote><p>到这里个人博客搭建完成</p><h2 id="提交项目到GitHub"><a href="#提交项目到GitHub" class="headerlink" title="提交项目到GitHub"></a>提交项目到GitHub</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"XXX"</span>创建博客文章</div><div class="line">$ hexo g    <span class="comment">#生成</span></div><div class="line">$ hexo d    <span class="comment">#部署</span></div></pre></td></tr></table></figure><p>部署完成就可以通过域名访问<a href="http://www.jsong.site" target="_blank" rel="external">我的博客</a></p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>Hexo的强大之处就在于支持多种风格的主题，我推荐安装其中NexT、Yilia、Yelee、Tranquilpeak这几个美观 主题。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/Tranquilpeak <span class="comment">#下载主题</span></div></pre></td></tr></table></figure></p><p>主题下载完成后修改hexo的_config.yml配置文件，将默认主题名改为下载的主题名：<br><img src="/2017/09/14/create-blog/image13.png" alt=""></p><blockquote><p>图为：_config.yml主题配置（我选用的是Tranquilpeak主题）</p></blockquote><h2 id="图片连接"><a href="#图片连接" class="headerlink" title="图片连接"></a>图片连接</h2><p>（1）修改hexo的_config.yml配置文件，将post_asset_folder:false改为true<br><img src="/2017/09/14/create-blog/image14.png" alt=""></p><blockquote><p>图为：_config.yml主题配置（我选用的是Tranquilpeak主题）</p></blockquote><p>（2）在hexo目录下执行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install https://github.com/CodeFalling/hexo-asset-image --save</div></pre></td></tr></table></figure></p><p>（3）使用命令新建文章，_post目录下就会生成与文章名一样的文件夹，这个文件夹用于存放静态资源<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"文章名"</span></div></pre></td></tr></table></figure></p><p><img src="/2017/09/14/create-blog/image15.png" alt=""></p><blockquote><p>图为：将需要引用的图片存放在与文章名同名的文件夹</p></blockquote><p>（4）图片的Markdown连接语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![名称（可不填）](文章同名文件夹名/image8.png)</div><div class="line">![]( create-blog/image8.png)</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍如何使用Hexo+GitHub搭建一个使用域名访问的个人博客网站。由于没有数据库访问，也无需购买服务器，成本极低，非常适合搭建个人博客网站，本人还只是菜鸟，其中的内容有什么不正确的还请指正。  &lt;/p&gt;
&lt;h2 id=&quot;技术介绍&quot;&gt;&lt;a href=&quot;#技术介绍&quot; class=&quot;headerlink&quot; title=&quot;技术介绍&quot;&gt;&lt;/a&gt;技术介绍&lt;/h2&gt;&lt;p&gt;Hexo是基于Nodo.js的一个快速，简单和强大的博客框架。Hexo会将Markdown语言（或其他语言）中撰写帖子在几秒钟内生成具有美丽主题的静态文件。&lt;/p&gt;
&lt;p&gt;Node.js 就是运行在服务端的 JavaScript。换句话说就是可以使用Node.js搭建静态服务器，Hexo就是基于Nodo.js的博客框架。&lt;/p&gt;
&lt;p&gt;GitHub其实就是一个面向开源及私有软件项目的托管平台，GitHub pages是GitHub为我们免费提供的服务器，GitHub pages 会托管[用户名].github.io代码库中的全部代码，并自动运行，因此GitHub就可以作为我们服务器而不需要购买额外的服务器或者云主机。&lt;/p&gt;
&lt;h2 id=&quot;搭建步骤介绍&quot;&gt;&lt;a href=&quot;#搭建步骤介绍&quot; class=&quot;headerlink&quot; title=&quot;搭建步骤介绍&quot;&gt;&lt;/a&gt;搭建步骤介绍&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1.安装Node.js
2.安装git
3.安装Hexo
4.搭建GitHub
5.配置GitHub与Hexo关联
6.提交项目到GitHub
7.安装主题
8.图片连接
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
      <category term="github pages + hexo + 域名解析" scheme="http://yoursite.com/tags/github-pages-hexo-%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
</feed>
